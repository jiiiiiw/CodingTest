def solution(n):
    MOD = 1_000_000_007  # 나머지를 구할 수
    
    if n % 2 != 0:  # n이 홀수인 경우는 채울 수 없음
        return 0
    
    dp = [0] * (n + 1)  # DP 테이블 초기화
    dp[0] = 1  # 가로 길이가 0인 경우, 채우는 방법은 1가지 (아무것도 놓지 않는 경우)
    dp[2] = 3  # 가로 길이가 2인 경우, 채우는 방법은 3가지
    
    # 점화식을 이용해 DP 테이블 채우기
    for i in range(4, n + 1, 2):
        dp[i] = dp[i - 2] * 3  # 기본적으로 dp[i-2]에 3을 곱하는 경우
        for j in range(4, i + 1, 2):
            dp[i] += dp[i - j] * 2  # 추가적인 패턴을 고려한 경우
        dp[i] %= MOD  # MOD로 나눈 나머지를 저장
    
    return dp[n]